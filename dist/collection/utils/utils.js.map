{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/utils/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,QAAQ,CAAC;AAC3B,OAAO,WAAW,MAAM,WAAW,CAAC;AAEpC,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,MAAc,EAAE,OAAO,GAAG,EAAE;IAClE,IAAI,CAAC;QACH,OAAO,MAAM,KAAK,CAAC,SAAS,CAAC,MAAM,kBACjC,KAAK,EAAE,GAAG,EACV,MAAM,EAAE,CAAC,EACT,oBAAoB,EAAE,GAAG,IACtB,OAAO,EACV,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC;AAED,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE;IAC5B,MAAM,gBAAgB,GAAG,WAAW,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5E,MAAM,qBAAqB,GAAG,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1E,MAAM,sBAAsB,GAAG,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3E,MAAM,yBAAyB,GAAG,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5E,MAAM,uBAAuB,GAAG,OAAO,CACrC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAC5E,CAAC;IAEF,OAAO;QACL,gBAAgB;QAChB,qBAAqB;QACrB,sBAAsB;QACtB,yBAAyB;QACzB,uBAAuB;KACxB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,UAAU,UAAU,CAAC,IAAY;IACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CACjC,IAAI,MAAM,CAAC,YAAY,GAAG,IAAI,GAAG,WAAW,CAAC,CAC9C,CAAC;IACF,OAAO,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC9D,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,IAAY;IACxC,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;QACvB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAEtD,OAAO,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CACjC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,iCACV,GAAG,KACN,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAClB,EACF,EAAE,CACH,CAAC;AACJ,CAAC","sourcesContent":["import QRLib from 'qrcode';\nimport isMobileLib from 'is-mobile';\n\nexport async function getQrCodeImageUrl(qrCode: string, options = {}) {\n  try {\n    return await QRLib.toDataURL(qrCode, {\n      width: 200,\n      margin: 2,\n      errorCorrectionLevel: 'L',\n      ...options,\n    });\n  } catch (error) {\n    return null;\n  }\n}\n\nexport const useDevice = () => {\n  const isMobileOrTablet = isMobileLib({ tablet: true, featureDetect: true });\n  const isChromeOnAppleDevice = Boolean(navigator.userAgent.match(/CriOS/));\n  const isFirefoxOnAppleDevice = Boolean(navigator.userAgent.match(/FxiOS/));\n  const isOperaTouchOnAppleDevice = Boolean(navigator.userAgent.match(/OPT/));\n  const isChromeOnAndroidMobile = Boolean(\n    navigator.userAgent.match(/Android/) && navigator.userAgent.match(/Chrome/),\n  );\n\n  return {\n    isMobileOrTablet,\n    isChromeOnAppleDevice,\n    isFirefoxOnAppleDevice,\n    isOperaTouchOnAppleDevice,\n    isChromeOnAndroidMobile,\n  };\n};\n\nexport function readCookie(name: string) {\n  const match = document.cookie.match(\n    new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'),\n  );\n  return match !== null ? decodeURIComponent(match[3]) : null;\n}\n\nexport function getHashParams(hash: string) {\n  if (hash === undefined) {\n    return {};\n  }\n\n  const params = new URLSearchParams(hash.substring(1));\n\n  return [...params.entries()].reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr[0]]: curr[1],\n    }),\n    {},\n  );\n}\n"]}